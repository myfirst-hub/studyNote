exports 和 module.exports 的使用
如果要对外暴露属性或方法，就用 exports 就行，要暴露对象(类似class，包含了很多属性和方法)，就用 module.exports。

__dirname 表示当前执行脚本所在的目录。

_filename 表示当前正在执行的脚本的文件名。它将输出文件所在位置的绝对路径，且和命令行参数所指定的文件名不一定相同。
 如果在模块中，返回的值是模块文件的路径。

express.static是Express中唯一的内建中间件。

app=express()
app.use()，为路由指定中间件
app.use方法实际上是将中间件保存在一个数组中，注册路由时，依次将数组的元素取出

path:
windows是用反斜杠\分割目录或者文件的，而在类Unix的系统中是用的/;

path.join() 方法使用平台特定的分隔符把全部给定的 path 片段连接到一起，并规范化生成的路径。
注意：不推荐路径直接进行字符串拼接，毕竟win和POSIX系统路径有区别。
join()只是拼接各个path片段，并不像resolve()一样除了拼接各个字段还拼接了工作目录的路径，其次如果以/开头的字符串片段在join并不像resolve一
样是只返回自身，还有就是.. 同 ../是一个意思都代表上一级目录

path.resolve() 方法会把一个路径或路径片段的序列解析为一个绝对路径。（path.resolve() 会返回当前工作目录的绝对路径）
若字符以 / 开头，不会拼接到前面的路径；若以 ../ 开头，拼接前面的路径，但是不含前面一节的最后一层路径；若以 ./ 开头 或者没有符号 则拼接前面路径；
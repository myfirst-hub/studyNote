学习地址链接：http://www.jb51.net/article/77524.htm
	      https://blog.csdn.net/csdn_zsdf/article/details/70146551

__proto__ 属性来表示一个对象的原型链
每个对象的__proto__表示其构造函数（继承父类）的原型（即构造函数.prototype）

__proto__ 的理解：每个对象都会在其内部初始化一个属性，就是 __proto__，当我们访问一个对象的属性时，如
果这个对象内部不存在这个属性，那么他就会去__proto__里找这个属性，这个 __proto__又会有自己的__proto__，
于是就这样一直找下去，也就是我们平时所说的原型链的概念。

原型链作为实现继承的主要方法。其基本思想是利用原型让一个引用类型继承另一个引用类型的属性和方法。
在JavaScript中，用 __proto__ 属性来表示一个对象的原型链。当查找一个对象的属性时，JavaScript 会向上遍历
原型链，直到找到给定名称的属性为止！

 function Person(_name,_age){
   this.name = _name;
   this.age = _age;
}
var p  = new Person("孤傲苍狼",24);
new的过程拆分成以下三步：
1.var p={}; 初始化一个对象p。
2. p.__proto__=Person.prototype;，将对象p的 __proto__ 属性设置为 Person.prototype
3.Person.call(p,"孤傲苍狼",24);调用构造函数Person来初始化p。
在创建对象的同时，javacript引擎会自动加上这句代码：p.prototype=new Person();(该方法即使原型继承)


typeof 一般只能返回如下几个结果："number"、"string"、"boolean"、"object"、"function" 和 "undefined"。
instanceof 运算符用来测试一个对象在其原型链中是否存在一个构造函数的 prototype 属性。语法：object instanceof constructor
